name: Release SDK # 워크플로우 이름

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 실행

permissions:
  contents: write # Git 커밋 및 릴리즈 노트 생성을 위해 필요
  pull-requests: write # PR 업데이트를 위해 필요 (Changesets가 사용)

jobs:
  release:
    runs-on: ubuntu-latest # 실행 환경

    steps:
      - name: Checkout repo # 저장소 코드 가져오기
        uses: actions/checkout@v3 # v4 사용을 권장합니다 (uses: actions/checkout@v4)
        with:
          fetch-depth: 0 # Changesets는 전체 Git 히스토리가 필요할 수 있습니다.

      - name: Setup Node.js # Node.js 환경 설정
        uses: actions/setup-node@v4
        with:
          node-version: '22' # 최신 Node.js 버전

      - name: Setup PNPM # PNPM 설치
        uses: pnpm/action-setup@v2
        with:
          version: 10.14.0 # 최신 pnpm 버전

      - name: Install dependencies # 프로젝트 종속성 설치
        run: pnpm install --no-frozen-lockfile # lockfile 호환성 문제 해결

      - name: Build packages # 패키지 빌드
        run: pnpm build

      - name: Create .npmrc for npm token # ✨ npm 인증을 위한 핵심 스텝 ✨
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          echo "access=public" >> .npmrc # 퍼블릭 접근 설정 추가 (기존 설정)
          echo "registry=https://registry.npmjs.org/" >> .npmrc # npm 레지스트리 설정 추가 (기존 설정)
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }} # GitHub Secrets에 저장된 npm 토큰 사용

      - name: Create release (changesets) # Changesets를 이용한 릴리즈 및 퍼블리싱
        uses: changesets/action@v1 # Changesets 액션 사용
        with:
          publish: pnpm release # package.json의 "release" 스크립트 실행
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub API 접근을 위한 기본 토큰
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }} # Changesets 액션에 npm 토큰 명시적으로